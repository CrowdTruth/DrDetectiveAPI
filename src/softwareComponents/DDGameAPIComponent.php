<?php
namespace CrowdTruth\DDGameapi;

use \MongoDB\Entity as Entity;
use \MongoDB\Activity as Activity;
use \MongoDB\SoftwareComponent as SoftwareComponent;
use \MongoDate as MongoDate;


/**
 * Software component for storing in the database jugdements generated by 
 * Dr. Detective Game and which are sent to CrowdTruth via the communication API.
 * 
 * @author carlosm
 */
class DDGameAPIComponent {
	protected $softwareComponent;
	
	/**
	 * Create a DDGameAPIComponent instance.
	 */
	public function __construct() {
		$this->softwareComponent = SoftwareComponent::find('drdetectiveapi');
	}
	
	/**
	 * Store to the database a list of game Judgements.
	 * 
	 * @param $entities List of judgements to be inserted. 
	 * 
	 * @return multitype:string A status array containing the result status information.
	 */
	public function store($entities) {
		$nEnts = count($entities);
		
		$activity = new Activity();
		$activity->softwareAgent_id = $this->softwareComponent->_id;
		$activity->save();
		
		// TODO: questions: who should own entities? on which project? with which doctype?
		$ctUser = 'carlosm';
		$project = 'nlesc';
		$docType = 'gamejudgement';
		$seqName = 'entity/gamejudgement';
		
		// The '&' in '&$entity' means we modify the array directly
		foreach ($entities as $key => &$entity) {
			$entity['_id'] = $seqName.'/'.$entity['judgement_id'];
			$entity['activity_id'] = $activity->_id;
			$entity['project'] = $project;
			$entity['documentType'] = $docType;
			
			$entity['gameuser_id'] = $entity['user_id'];
			$entity['user_id'] = $ctUser;
			
			// Reorganize data in entity
			$entity['content'] = [
				'task_data' => $entity['task_data'],
				'response'  => $entity['response'],
			];
			unset($entity['task_data']);
			unset($entity['response']);
			unset($entity['judgement_id']);
			
			$entity['hash'] = md5(serialize($entity['content']));
			if(Entity::where('_id', $entity['_id'])->exists()) {
				unset($entities[$key]);
			}
		}
		if(count($entities)>0) {
			\DB::collection('entities')->insert($entities);
		}
		
		return [
			'status' => 'ok',
			'nEntities' => count($entities)
		];
	}
}
